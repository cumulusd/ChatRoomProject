//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatRoomSharpClient.ChatRoomService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatRoomService.IChatRoom", CallbackContract=typeof(ChatRoomSharpClient.ChatRoomService.IChatRoomCallback))]
    public interface IChatRoom {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoom/JoinRoom", ReplyAction="http://tempuri.org/IChatRoom/JoinRoomResponse")]
        void JoinRoom();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoom/JoinRoom", ReplyAction="http://tempuri.org/IChatRoom/JoinRoomResponse")]
        System.Threading.Tasks.Task JoinRoomAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoom/LeaveRoom", ReplyAction="http://tempuri.org/IChatRoom/LeaveRoomResponse")]
        void LeaveRoom();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoom/LeaveRoom", ReplyAction="http://tempuri.org/IChatRoom/LeaveRoomResponse")]
        System.Threading.Tasks.Task LeaveRoomAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoom/SendMessage", ReplyAction="http://tempuri.org/IChatRoom/SendMessageResponse")]
        void SendMessage(string fromClientName, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoom/SendMessage", ReplyAction="http://tempuri.org/IChatRoom/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(string fromClientName, string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatRoomCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoom/didReceiveMessage", ReplyAction="http://tempuri.org/IChatRoom/didReceiveMessageResponse")]
        void didReceiveMessage(string fromClientName, string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatRoomChannel : ChatRoomSharpClient.ChatRoomService.IChatRoom, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatRoomClient : System.ServiceModel.DuplexClientBase<ChatRoomSharpClient.ChatRoomService.IChatRoom>, ChatRoomSharpClient.ChatRoomService.IChatRoom {
        
        public ChatRoomClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatRoomClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatRoomClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatRoomClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatRoomClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void JoinRoom() {
            base.Channel.JoinRoom();
        }
        
        public System.Threading.Tasks.Task JoinRoomAsync() {
            return base.Channel.JoinRoomAsync();
        }
        
        public void LeaveRoom() {
            base.Channel.LeaveRoom();
        }
        
        public System.Threading.Tasks.Task LeaveRoomAsync() {
            return base.Channel.LeaveRoomAsync();
        }
        
        public void SendMessage(string fromClientName, string message) {
            base.Channel.SendMessage(fromClientName, message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string fromClientName, string message) {
            return base.Channel.SendMessageAsync(fromClientName, message);
        }
    }
}
